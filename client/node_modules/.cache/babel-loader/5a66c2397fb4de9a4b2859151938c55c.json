{"ast":null,"code":"var _jsxFileName = \"/Users/andrioljaupaj/Desktop/chat-app/client/src/components/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./chat.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst CONNECTION = \"localhost:8080/\";\n\nfunction Chat() {\n  _s();\n\n  const [isLoggedIn, setIsloggedIn] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    socket = io(CONNECTION);\n  }, [CONNECTION]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList([...messageList, data]);\n    });\n    autoscroll();\n  }, []);\n\n  const roomConnection = () => {\n    socket.emit(\"join\", room, username);\n    setIsloggedIn(true);\n  };\n\n  const sendMessage = () => {\n    let messageContent = {\n      room: room,\n      content: {\n        username: username,\n        message: message\n      }\n    };\n    socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n    setMessage(\"\");\n  };\n\n  const getUser = async () => {\n    const response = await fetch(\"http://localhost:8080/user\");\n    console.log(response);\n    const user = await response.json();\n    console.log(user);\n    setMessageList(user);\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logIn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          placeholder: \"Name...\",\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"room\",\n          type: \"text\",\n          placeholder: \"Room...\",\n          onChange: e => {\n            setRoom(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: roomConnection,\n        type: \"submit\",\n        children: \"Enter Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messageList && messageList.map((val, key) => {\n          console.log(val.username);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageContainer\",\n            id: val.username === username ? \"You\" : \"Other\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messageIndividual\",\n              children: [val.username === username ? \"You\" : val.username, \":\", val.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Message...\",\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"dBc55aqotXQYRkdYaZUKHCuYHPo=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/andrioljaupaj/Desktop/chat-app/client/src/components/chat/chat.js"],"names":["React","useState","useEffect","io","socket","CONNECTION","Chat","isLoggedIn","setIsloggedIn","room","setRoom","message","setMessage","messageList","setMessageList","username","setUsername","on","data","autoscroll","roomConnection","emit","sendMessage","messageContent","content","getUser","response","fetch","console","log","user","json","e","target","value","map","val","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./chat.scss\";\nlet socket;\nconst CONNECTION = \"localhost:8080/\";\nfunction Chat() {\n  const [isLoggedIn, setIsloggedIn] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    socket = io(CONNECTION);\n  }, [CONNECTION]);\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList([...messageList, data]);\n    });\n    autoscroll();\n  }, []);\n  const roomConnection = () => {\n    socket.emit(\"join\", room, username);\n    setIsloggedIn(true);\n  };\n  const sendMessage = () => {\n    let messageContent = {\n      room: room,\n      content: {\n        username: username,\n        message: message,\n      },\n    };\n\n    socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n    setMessage(\"\");\n  };\n  const getUser = async () => {\n    const response = await fetch(\"http://localhost:8080/user\");\n    console.log(response);\n    const user = await response.json();\n    console.log(user);\n    setMessageList(user);\n  };\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  return (\n    <div className=\"chat\">\n      {!isLoggedIn ? (\n        <div className=\"logIn\">\n          <div className=\"inputs\">\n            <input\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Name...\"\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n            <input\n              name=\"room\"\n              type=\"text\"\n              placeholder=\"Room...\"\n              onChange={(e) => {\n                setRoom(e.target.value);\n              }}\n            />\n          </div>\n          <button onClick={roomConnection} type=\"submit\">\n            Enter Chat\n          </button>\n        </div>\n      ) : (\n        <div className=\"chatContainer\">\n          <div className=\"messages\">\n            {messageList &&\n              messageList.map((val, key) => {\n                console.log(val.username);\n                return (\n                  <div\n                    className=\"messageContainer\"\n                    id={val.username === username ? \"You\" : \"Other\"}\n                  >\n                    <div className=\"messageIndividual\">\n                      {val.username === username ? \"You\" : val.username}:\n                      {val.message}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n\n          <div className=\"messageInputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Message...\"\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n            />\n\n            <button onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}