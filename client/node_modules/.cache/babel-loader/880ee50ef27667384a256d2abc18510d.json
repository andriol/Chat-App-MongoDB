{"ast":null,"code":"var _jsxFileName = \"/Users/andrioljaupaj/Desktop/chat-app/client/src/components/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport ReactScrollableFeed from \"react-scrollable-feed\";\nimport \"./chat.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst CONNECTION = \"localhost:8080/\";\n\nfunction Chat() {\n  _s();\n\n  console.log();\n  const [isLoggedIn, setIsloggedIn] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [userInfo, setUserInfo] = useState({});\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket = io(CONNECTION);\n  }, [CONNECTION]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      console.log(data);\n      setMessageList([...messageList, data]);\n    });\n  });\n\n  const roomConnection = () => {\n    setIsloggedIn(true);\n    socket.emit(\"join\", room);\n  };\n\n  const sendMessage = async () => {\n    let messageContent = {\n      room: room,\n      content: {\n        username: username,\n        message: message,\n        owner: userInfo // gets user's info\n\n      }\n    }; // send message\n\n    await socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n  }; //receive message\n\n\n  const getMessage = async () => {\n    const response = await fetch(\"http://localhost:8080/message\");\n    const messages = await response.json();\n    console.log(messages);\n    setMessages(messages);\n  };\n\n  useEffect(() => {\n    getMessage();\n  }, []);\n  const authToken = sessionStorage.getItem(\"authToken\");\n  const reqOptions = {\n    headers: {\n      authorization: `Bearer ${authToken}`\n    }\n  };\n\n  const getProfile = async () => {\n    const response = await fetch(\"http://localhost:8080/user/profile\", reqOptions);\n    const userInfo = await response.json();\n    setUserInfo(userInfo);\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(ReactScrollableFeed, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messageList.map((val, key) => {\n            console.log(val);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messageContainer\",\n              id: val.username == username ? \"You\" : \"Other\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messageIndividual\",\n                children: [val.username, \": \", val.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Message...\",\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"/7GcGbBPrR/qns01PgFz6C2JUn0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/andrioljaupaj/Desktop/chat-app/client/src/components/chat/chat.js"],"names":["React","useState","useEffect","io","ReactScrollableFeed","socket","CONNECTION","Chat","console","log","isLoggedIn","setIsloggedIn","room","setRoom","message","setMessage","username","setUsername","messageList","setMessageList","userInfo","setUserInfo","messages","setMessages","on","data","roomConnection","emit","sendMessage","messageContent","content","owner","getMessage","response","fetch","json","authToken","sessionStorage","getItem","reqOptions","headers","authorization","getProfile","map","val","key","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport ReactScrollableFeed from \"react-scrollable-feed\";\nimport \"./chat.scss\";\nlet socket;\nconst CONNECTION = \"localhost:8080/\";\nfunction Chat() {\n  console.log();\n  const [isLoggedIn, setIsloggedIn] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [userInfo, setUserInfo] = useState({});\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket = io(CONNECTION);\n  }, [CONNECTION]);\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      console.log(data);\n      setMessageList([...messageList, data]);\n    });\n  });\n\n  const roomConnection = () => {\n    setIsloggedIn(true);\n    socket.emit(\"join\", room);\n  };\n  const sendMessage = async () => {\n    let messageContent = {\n      room: room,\n      content: {\n        username: username,\n        message: message,\n        owner: userInfo, // gets user's info\n      },\n    };\n\n    // send message\n\n    await socket.emit(\"send_message\", messageContent);\n    setMessageList([...messageList, messageContent.content]);\n  };\n\n  //receive message\n\n  const getMessage = async () => {\n    const response = await fetch(\"http://localhost:8080/message\");\n    const messages = await response.json();\n    console.log(messages);\n    setMessages(messages);\n  };\n  useEffect(() => {\n    getMessage();\n  }, []);\n  const authToken = sessionStorage.getItem(\"authToken\");\n\n  const reqOptions = {\n    headers: {\n      authorization: `Bearer ${authToken}`,\n    },\n  };\n  const getProfile = async () => {\n    const response = await fetch(\n      \"http://localhost:8080/user/profile\",\n      reqOptions\n    );\n\n    const userInfo = await response.json();\n\n    setUserInfo(userInfo);\n  };\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* {!isLoggedIn ? (\n        <div className=\"logIn\">\n          <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Name...\"\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Room...\"\n              onChange={(e) => {\n                setRoom(e.target.value);\n              }}\n            />\n          </div>\n          <button onClick={roomConnection}>Enter Chat</button>\n        </div>\n      ) : ( */}\n      <div className=\"chatContainer\">\n        <ReactScrollableFeed>\n          <div className=\"messages\">\n            {messageList.map((val, key) => {\n              console.log(val);\n              return (\n                <div\n                  className=\"messageContainer\"\n                  id={val.username == username ? \"You\" : \"Other\"}\n                >\n                  <div className=\"messageIndividual\">\n                    {val.username}: {val.message}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </ReactScrollableFeed>\n        <div className=\"messageInputs\">\n          <input\n            type=\"text\"\n            placeholder=\"Message...\"\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n      {/* )} */}\n    </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}